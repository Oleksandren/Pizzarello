//
//  PizzeriasListPresenter.swift
//  Pizzarello
//
//  Created by Oleksandr Nechet on 23.07.17.
//  Copyright (c) 2017 Oleksandr Nechet. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PizzeriasListPresentationLogic
{
    func presentFetchedPizzerias(response: PizzeriasList.FetchPizzerias.Response)
    func allPizzeriasDidReceived()
    func displayErrorMessage(errorMessage: String)
}

class PizzeriasListPresenter: PizzeriasListPresentationLogic
{
    weak var viewController: PizzeriasListDisplayLogic?
    
    // MARK: - PizzeriasListPresentationLogic
    
    func presentFetchedPizzerias(response: PizzeriasList.FetchPizzerias.Response)
    {
        
        switch response.result {
        case .success(result: let pizzerias):
            typealias DiplaydItem = PizzeriasList.FetchPizzerias.ViewModel.DisplayedPizzerias
            let displayedPizzerias = pizzerias.map { pizzeria -> DiplaydItem in
                return DiplaydItem(id: pizzeria.id,
                                   name: pizzeria.name,
                                   distance: String(pizzeria.distance))
            }
            
            let viewModel = PizzeriasList.FetchPizzerias.ViewModel(displayedPizzerias: displayedPizzerias)
            DispatchQueue.main.async {
                self.viewController?.displayFetchedPizzerias(viewModel: viewModel)
            }
            
        case .failure(errorMessage: let errorMessage):
            DispatchQueue.main.async {
                self.viewController?.displayErrorMessage(errorMessage: errorMessage)
            }
        }
    }
    
    func allPizzeriasDidReceived()
    {
        viewController?.allPizzeriasDidReceived()
    }
    
    func displayErrorMessage(errorMessage: String)
    {
        viewController?.displayErrorMessage(errorMessage: errorMessage)
    }
}
