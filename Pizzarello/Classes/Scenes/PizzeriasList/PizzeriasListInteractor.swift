//
//  PizzeriasListInteractor.swift
//  Pizzarello
//
//  Created by Oleksandr Nechet on 23.07.17.
//  Copyright (c) 2017 Oleksandr Nechet. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PizzeriasListBusinessLogic
{
    func fetchPizzerias()
    func requestNextPizzerias()
}

protocol PizzeriasListDataStore
{
    var pizzerias: [Pizzeria]? { get }
}

class PizzeriasListInteractor: PizzeriasListBusinessLogic, PizzeriasListDataStore
{
    var presenter: PizzeriasListPresentationLogic?
    var pizzerias: [Pizzeria]? {
        didSet {
            pizzeriasListDidUpdated()
        }
    }
    private var store = PizzeriasCoreDataStore()
    private var networkProvider = PizzeriasNetworkProvider()
    private var requestNextPizzeriasInProcess: Bool = false
    
    init() {
        store.fetchedPizeriasDidChanged = { pizzerias in
            self.pizzerias = pizzerias
        }
    }
    
    // MARK: - PizzeriasListBusinessLogic
    
    func requestNextPizzerias()
    {
        networkProvider.fetchPizzerias { result in
            switch result {
            case .failure(errorMessage: let errorMessage):
                let response = PizzeriasList.FetchPizzerias.Response(result: PizzeriasResponse.failure(errorMessage: errorMessage))
                self.presenter?.presentFetchedPizzerias(response: response)
                
            case .success(result: let pizzerias):
            self.store.createPizzerias(pizzeriasToCreate: pizzerias, completionHandler: { _ in })
            }
        }
    }
    
    func fetchPizzerias()
    {
        store.fetchPizzeriasWithChangesObserving { result in
            switch result {
            case .success(result: let pizzerias):
                self.pizzerias = pizzerias
                
            case .failure(error: let storeError):
                let response = PizzeriasList.FetchPizzerias.Response(result: PizzeriasResponse.failure(errorMessage: storeError.localizedDescription))
                self.presenter?.presentFetchedPizzerias(response: response)
            }
        }
    }
    
    //MARK: - Helpers
    
    private func pizzeriasListDidUpdated()
    {
        let response = PizzeriasList.FetchPizzerias.Response(result: PizzeriasResponse.success(result: pizzerias ?? []))
        self.presenter?.presentFetchedPizzerias(response: response)
    }
}
