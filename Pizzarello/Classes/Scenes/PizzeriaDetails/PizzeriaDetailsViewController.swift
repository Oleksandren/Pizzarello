//
//  PizzeriaDetailsViewController.swift
//  Pizzarello
//
//  Created by Oleksandr Nechet on 25.07.17.
//  Copyright (c) 2017 Oleksandr Nechet. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PizzeriaDetailsDisplayLogic: class
{
    func displayPizzeriaInfo(viewModel: PizzeriaDetails.ViewModel)
}

class PizzeriaDetailsViewController: UITableViewController, PizzeriaDetailsDisplayLogic
{
    var interactor: PizzeriaDetailsBusinessLogic?
    var router: (NSObjectProtocol & PizzeriaDetailsDataPassing)?
    private var displayedItems: [PizzeriaDetails.ViewModel.DisplayedItem] = []
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = PizzeriaDetailsInteractor()
        let presenter = PizzeriaDetailsPresenter()
        let router = PizzeriaDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        interactor?.getPizzeria()
    }
    
    //MARK: - UITableViewDataSource
    
    override func tableView(_ tableView: UITableView,
                            numberOfRowsInSection section: Int) -> Int
    {
        return displayedItems.count
    }
    
    override func tableView(_ tableView: UITableView,
                            cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        let cell: PizzeriaDetailsCell = tableView.dequeueReusableCell(for: indexPath)
        cell.setDisplayedItem(displayedItems[indexPath.row])
        
        return cell
    }
    
    //MARK: - PizzeriaDetailsDisplayLogic
    
    func displayPizzeriaInfo(viewModel: PizzeriaDetails.ViewModel)
    {
        displayedItems = viewModel.displayedItems
        tableView.reloadData()
    }
}
